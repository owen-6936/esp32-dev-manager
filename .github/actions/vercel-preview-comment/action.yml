name: "Vercel Preview Comment"
description: "Posts a Vercel preview link with QR code and cleans up old comments"

inputs:
  pr_number:
    description: "Pull request number"
    required: true
  repo_owner:
    description: "Repository owner"
    required: true
  repo_name:
    description: "Repository name"
    required: true
  github_token:
    description: "GitHub token for authentication"
    required: true
  branch_name:
    description: "The name of the Git branch from the pull request"
    required: true

runs:
  using: "composite"
  steps:
    # Delete Previous Comments
    - name: Delete Previous Comments
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          // Get a list of all comments on the pull request
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });

          // Loop through the comments and delete the ones that match our message
          for (const comment of comments) {
            if (comment.body && comment.body.includes("ðŸš€ **Vercel Preview Available**")) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id
              });
            }
          }

    # Post a New Comment
    - name: Post New Comment
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const repoOwner = '${{ inputs.repo_owner }}';
          const branchName = '${{ inputs.branch_name }}';

          // Construct the correct Vercel preview URL using the branch name
          const url = `https://esp32-dev-manager-git-${branchName}-${repoOwner}.vercel.app`;
          const qr = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(url)}`;

          const body = [
            'ðŸš€ **Vercel Preview Available**',
            `ðŸ”— [View Live Preview](${url})`,
            '',
            'ðŸ“± Scan on mobile:',
            `![QR Code](${qr})`,
            '',
            `ðŸ§ª This preview is auto-generated for PR #${{ inputs.pr_number }}.`
          ].join('\n');

          // Post the new comment to the pull request
          await github.rest.issues.createComment({
            issue_number: parseInt('${{ inputs.pr_number }}'),
            owner: repoOwner,
            repo: '${{ inputs.repo_name }}',
            body
          });
