name: Vercel Preview

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy to Vercel
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # 1. 'vercel link' is the first and most crucial step.
          # It connects the local repository on the runner to your Vercel project
          # and creates a .vercel directory with the project and scope IDs.
          # The --yes flag accepts all prompts, making it non-interactive.
          vercel link --yes ${{ secrets.VERCEL_PROJECT_ID }} --scope ${{ secrets.VERCEL_ORG_ID }} --token ${{ secrets.VERCEL_TOKEN }}

          # 2. 'vercel pull' downloads the project's configuration settings
          # from Vercel to the local .vercel directory. It uses the context
          # from the 'vercel link' command, so we do not need to pass the
          # project and scope flags again.
          vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}

          # 3. 'vercel build' builds the project locally on the runner,
          # using the settings downloaded by 'vercel pull'. It does not
          # need project or scope flags either.
          vercel build --prod

          # 4. 'vercel deploy' uploads the built output from the local .vercel/output directory
          # to the Vercel project. It requires the project and scope flags to
          # know where to upload the assets.
          vercel_url=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} --project ${{ secrets.VERCEL_PROJECT_ID }} --scope ${{ secrets.VERCEL_ORG_ID }})
          echo "vercel_url=${vercel_url}" >> $GITHUB_OUTPUT

    outputs:
      vercel_url: ${{ steps.deploy.outputs.vercel_url }}
      pr_number: ${{ github.event.pull_request.number }}
      repo_owner: ${{ github.repository_owner }}
      repo_name: ${{ github.event.repository.name }}
      branch_name: ${{ github.head_ref }}

  comment:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    if: github.event_name == 'pull_request'
    steps:
      - name: Post Vercel Preview Comment
        uses: ./.github/actions/vercel-preview-comment
        with:
          pr_number: ${{ needs.build-and-deploy.outputs.pr_number }}
          repo_owner: ${{ needs.build-and-deploy.outputs.repo_owner }}
          repo_name: ${{ needs.build-and-deploy.outputs.repo_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch_name: ${{ needs.build-and-deploy.outputs.branch_name }}
          vercel_url: ${{ needs.build-and-deploy.outputs.vercel_url }}
