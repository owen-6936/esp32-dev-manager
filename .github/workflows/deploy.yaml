name: Node.js CI/CD and Community Management

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  issues:
    types: [opened]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run Build
        run: npm run build

      - name: Run Tests
        run: npm test

      - name: Upload Build Artifact (only on Node 20.x)
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: esp32-dashboard-dist
          path: dist/
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    environment:
      name: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: esp32-dashboard-dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/
          publish_branch: gh-pages

  preview-deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: esp32-dashboard-dist

      - name: Deploy PR Preview to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/
          publish_branch: gh-pages
          destination_dir: pr-preview/pr-${{ github.event.pull_request.number }}

  first-interaction:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event.action == 'opened'
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: First Interaction
        uses: actions/first-interaction@v1.3.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          issue-message: "Hello and welcome to the project! Thanks for opening your first issue. We're excited to have you here!"
          pr-message: "Hello and welcome to the project! Thanks for your first pull request. We'll be reviewing it shortly!"
